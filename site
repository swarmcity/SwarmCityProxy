map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        text/javascript            max;
        application/javascript     max;
        ~image/                    max;
}

server {
        listen                  80;
        listen                  [::]:80;
        server_name             SITE_HOSTNAME;
        return 301              https://$server_name$request_uri;
}

server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl;
        server_name             SITE_HOSTNAME;
        expires                 $expires;
        ssl_certificate         /etc/nginx/ssl/SITE_HOSTNAME/fullchain.pem;
        ssl_certificate_key     /etc/nginx/ssl/SITE_HOSTNAME/privkey.pem;
        include                 snippets/ssl-params.conf;

        location  ~* /img/ {
                limit_req zone=api burst=100 nodelay;
                proxy_pass http://api:3000;
                proxy_http_version 1.1;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

        } 

	location  ~* /api/ {
                access_log /var/log/nginx/api_access.log upstream_time;
                limit_req zone=api burst=100 nodelay;
                proxy_pass http://api:8011;
                proxy_http_version 1.1;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

        }
        
        location / {
                access_log /var/log/nginx/site_access.log upstream_time;
                limit_req zone=site burst=100 nodelay;
                proxy_pass http://site:8088;
                proxy_http_version 1.1;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_cache STATIC;
                proxy_cache_lock on;
                # To forcefully cache content via Nginx
                proxy_ignore_headers Cache-Control;
                proxy_cache_valid 200 301 1d;
                proxy_cache_valid 302 1h;
                proxy_cache_valid any 5m;
                proxy_cache_revalidate on;
                proxy_cache_use_stale error timeout invalid_header updating
                http_500 http_502 http_503 http_504;
        }
}

